Traceback (most recent call last):
  File "experiment.py", line 167, in <module>
    run_experiment(runner, params, output_directory)
  File "experiment.py", line 48, in run_experiment
    runner.define_model()
  File "tf_runner.py", line 40, in define_model
    self.model = KerasModelBuilder(self.model_type, self.model_complexity).build()
  File "model_builder.py", line 22, in build
    return self._lstm_simple() if self.model_complexity == "simple" else self._lstm_complex()
  File "keras_model_builder.py", line 169, in _lstm_simple
    model = Sequential([
  File "sequential.py", line 76, in __init__
    self._maybe_rebuild()
  File "sequential.py", line 141, in _maybe_rebuild
    self.build(input_shape)
  File "layer.py", line 228, in build_wrapper
    original_build_method(*args, **kwargs)
  File "sequential.py", line 187, in build
    x = layer(x)
  File "traceback_utils.py", line 122, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "linalg.py", line 166, in qr
    return tf.linalg.qr(x)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Value for attr 'T' of bfloat16 is not in the list of allowed values: double, float, half, complex64, complex128
	; NodeDef: {{node Qr}}; Op<name=Qr; signature=input:T -> q:T, r:T; attr=full_matrices:bool,default=false; attr=T:type,allowed=[DT_DOUBLE, DT_FLOAT, DT_HALF, DT_COMPLEX64, DT_COMPLEX128]> [Op:Qr] name: 